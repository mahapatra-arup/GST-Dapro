//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DAPRO.SalesFolder.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSChallenInvoice")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSChallenInvoice : global::System.Data.DataSet {
        
        private OrganizationDetailsDataTable tableOrganizationDetails;
        
        private BillingAndShippedDetailsDataTable tableBillingAndShippedDetails;
        
        private ItemDetailsDataTable tableItemDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DSChallenInvoice() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DSChallenInvoice(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OrganizationDetails"] != null)) {
                    base.Tables.Add(new OrganizationDetailsDataTable(ds.Tables["OrganizationDetails"]));
                }
                if ((ds.Tables["BillingAndShippedDetails"] != null)) {
                    base.Tables.Add(new BillingAndShippedDetailsDataTable(ds.Tables["BillingAndShippedDetails"]));
                }
                if ((ds.Tables["ItemDetails"] != null)) {
                    base.Tables.Add(new ItemDetailsDataTable(ds.Tables["ItemDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrganizationDetailsDataTable OrganizationDetails {
            get {
                return this.tableOrganizationDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BillingAndShippedDetailsDataTable BillingAndShippedDetails {
            get {
                return this.tableBillingAndShippedDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemDetailsDataTable ItemDetails {
            get {
                return this.tableItemDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DSChallenInvoice cln = ((DSChallenInvoice)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OrganizationDetails"] != null)) {
                    base.Tables.Add(new OrganizationDetailsDataTable(ds.Tables["OrganizationDetails"]));
                }
                if ((ds.Tables["BillingAndShippedDetails"] != null)) {
                    base.Tables.Add(new BillingAndShippedDetailsDataTable(ds.Tables["BillingAndShippedDetails"]));
                }
                if ((ds.Tables["ItemDetails"] != null)) {
                    base.Tables.Add(new ItemDetailsDataTable(ds.Tables["ItemDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableOrganizationDetails = ((OrganizationDetailsDataTable)(base.Tables["OrganizationDetails"]));
            if ((initTable == true)) {
                if ((this.tableOrganizationDetails != null)) {
                    this.tableOrganizationDetails.InitVars();
                }
            }
            this.tableBillingAndShippedDetails = ((BillingAndShippedDetailsDataTable)(base.Tables["BillingAndShippedDetails"]));
            if ((initTable == true)) {
                if ((this.tableBillingAndShippedDetails != null)) {
                    this.tableBillingAndShippedDetails.InitVars();
                }
            }
            this.tableItemDetails = ((ItemDetailsDataTable)(base.Tables["ItemDetails"]));
            if ((initTable == true)) {
                if ((this.tableItemDetails != null)) {
                    this.tableItemDetails.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DSChallenInvoice";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSChallenInvoice.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOrganizationDetails = new OrganizationDetailsDataTable();
            base.Tables.Add(this.tableOrganizationDetails);
            this.tableBillingAndShippedDetails = new BillingAndShippedDetailsDataTable();
            base.Tables.Add(this.tableBillingAndShippedDetails);
            this.tableItemDetails = new ItemDetailsDataTable();
            base.Tables.Add(this.tableItemDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrganizationDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBillingAndShippedDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSChallenInvoice ds = new DSChallenInvoice();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void OrganizationDetailsRowChangeEventHandler(object sender, OrganizationDetailsRowChangeEvent e);
        
        public delegate void BillingAndShippedDetailsRowChangeEventHandler(object sender, BillingAndShippedDetailsRowChangeEvent e);
        
        public delegate void ItemDetailsRowChangeEventHandler(object sender, ItemDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrganizationDetailsDataTable : global::System.Data.TypedTableBase<OrganizationDetailsRow> {
            
            private global::System.Data.DataColumn columnTaxInvoiceSubject;
            
            private global::System.Data.DataColumn columnGSTIN;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnDateofInvoice;
            
            private global::System.Data.DataColumn columnAllTotalAmount;
            
            private global::System.Data.DataColumn columnTotalCGST;
            
            private global::System.Data.DataColumn columnTotalSGST;
            
            private global::System.Data.DataColumn columnTotalIGST;
            
            private global::System.Data.DataColumn columnTotalCESS;
            
            private global::System.Data.DataColumn columnCustomerNotes;
            
            private global::System.Data.DataColumn columnSignature;
            
            private global::System.Data.DataColumn columnSignatureString;
            
            private global::System.Data.DataColumn columnPhoto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsDataTable() {
                this.TableName = "OrganizationDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrganizationDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrganizationDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxInvoiceSubjectColumn {
                get {
                    return this.columnTaxInvoiceSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GSTINColumn {
                get {
                    return this.columnGSTIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateofInvoiceColumn {
                get {
                    return this.columnDateofInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllTotalAmountColumn {
                get {
                    return this.columnAllTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCGSTColumn {
                get {
                    return this.columnTotalCGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSGSTColumn {
                get {
                    return this.columnTotalSGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalIGSTColumn {
                get {
                    return this.columnTotalIGST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCESSColumn {
                get {
                    return this.columnTotalCESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNotesColumn {
                get {
                    return this.columnCustomerNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignatureColumn {
                get {
                    return this.columnSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignatureStringColumn {
                get {
                    return this.columnSignatureString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsRow this[int index] {
                get {
                    return ((OrganizationDetailsRow)(this.Rows[index]));
                }
            }
            
            public event OrganizationDetailsRowChangeEventHandler OrganizationDetailsRowChanging;
            
            public event OrganizationDetailsRowChangeEventHandler OrganizationDetailsRowChanged;
            
            public event OrganizationDetailsRowChangeEventHandler OrganizationDetailsRowDeleting;
            
            public event OrganizationDetailsRowChangeEventHandler OrganizationDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrganizationDetailsRow(OrganizationDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsRow AddOrganizationDetailsRow(
                        string TaxInvoiceSubject, 
                        string GSTIN, 
                        string Name, 
                        string Address, 
                        string State, 
                        string InvoiceNo, 
                        string DateofInvoice, 
                        string AllTotalAmount, 
                        string TotalCGST, 
                        string TotalSGST, 
                        string TotalIGST, 
                        string TotalCESS, 
                        string CustomerNotes, 
                        string Signature, 
                        string SignatureString, 
                        string Photo) {
                OrganizationDetailsRow rowOrganizationDetailsRow = ((OrganizationDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TaxInvoiceSubject,
                        GSTIN,
                        Name,
                        Address,
                        State,
                        InvoiceNo,
                        DateofInvoice,
                        AllTotalAmount,
                        TotalCGST,
                        TotalSGST,
                        TotalIGST,
                        TotalCESS,
                        CustomerNotes,
                        Signature,
                        SignatureString,
                        Photo};
                rowOrganizationDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrganizationDetailsRow);
                return rowOrganizationDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrganizationDetailsDataTable cln = ((OrganizationDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrganizationDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTaxInvoiceSubject = base.Columns["TaxInvoiceSubject"];
                this.columnGSTIN = base.Columns["GSTIN"];
                this.columnName = base.Columns["Name"];
                this.columnAddress = base.Columns["Address"];
                this.columnState = base.Columns["State"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnDateofInvoice = base.Columns["DateofInvoice"];
                this.columnAllTotalAmount = base.Columns["AllTotalAmount"];
                this.columnTotalCGST = base.Columns["TotalCGST"];
                this.columnTotalSGST = base.Columns["TotalSGST"];
                this.columnTotalIGST = base.Columns["TotalIGST"];
                this.columnTotalCESS = base.Columns["TotalCESS"];
                this.columnCustomerNotes = base.Columns["CustomerNotes"];
                this.columnSignature = base.Columns["Signature"];
                this.columnSignatureString = base.Columns["SignatureString"];
                this.columnPhoto = base.Columns["Photo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTaxInvoiceSubject = new global::System.Data.DataColumn("TaxInvoiceSubject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxInvoiceSubject);
                this.columnGSTIN = new global::System.Data.DataColumn("GSTIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSTIN);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnDateofInvoice = new global::System.Data.DataColumn("DateofInvoice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateofInvoice);
                this.columnAllTotalAmount = new global::System.Data.DataColumn("AllTotalAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllTotalAmount);
                this.columnTotalCGST = new global::System.Data.DataColumn("TotalCGST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCGST);
                this.columnTotalSGST = new global::System.Data.DataColumn("TotalSGST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSGST);
                this.columnTotalIGST = new global::System.Data.DataColumn("TotalIGST", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalIGST);
                this.columnTotalCESS = new global::System.Data.DataColumn("TotalCESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCESS);
                this.columnCustomerNotes = new global::System.Data.DataColumn("CustomerNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerNotes);
                this.columnSignature = new global::System.Data.DataColumn("Signature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignature);
                this.columnSignatureString = new global::System.Data.DataColumn("SignatureString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatureString);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnTaxInvoiceSubject.Caption = "DataColumn1";
                this.columnGSTIN.Caption = "DataColumn1";
                this.columnName.Caption = "DataColumn1";
                this.columnAddress.Caption = "DataColumn1";
                this.columnState.Caption = "DataColumn1";
                this.columnInvoiceNo.Caption = "DataColumn1";
                this.columnAllTotalAmount.Caption = "DataColumn1";
                this.columnTotalCGST.Caption = "DataColumn1";
                this.columnTotalSGST.Caption = "DataColumn1";
                this.columnTotalCESS.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsRow NewOrganizationDetailsRow() {
                return ((OrganizationDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrganizationDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrganizationDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrganizationDetailsRowChanged != null)) {
                    this.OrganizationDetailsRowChanged(this, new OrganizationDetailsRowChangeEvent(((OrganizationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrganizationDetailsRowChanging != null)) {
                    this.OrganizationDetailsRowChanging(this, new OrganizationDetailsRowChangeEvent(((OrganizationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrganizationDetailsRowDeleted != null)) {
                    this.OrganizationDetailsRowDeleted(this, new OrganizationDetailsRowChangeEvent(((OrganizationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrganizationDetailsRowDeleting != null)) {
                    this.OrganizationDetailsRowDeleting(this, new OrganizationDetailsRowChangeEvent(((OrganizationDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrganizationDetailsRow(OrganizationDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSChallenInvoice ds = new DSChallenInvoice();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrganizationDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BillingAndShippedDetailsDataTable : global::System.Data.TypedTableBase<BillingAndShippedDetailsRow> {
            
            private global::System.Data.DataColumn columnBillingName;
            
            private global::System.Data.DataColumn columnBillingGSTIN;
            
            private global::System.Data.DataColumn columnBillingAddress;
            
            private global::System.Data.DataColumn columnBillingState;
            
            private global::System.Data.DataColumn columnBillingStateCode;
            
            private global::System.Data.DataColumn columnShippedName;
            
            private global::System.Data.DataColumn columnShippedGSTIN;
            
            private global::System.Data.DataColumn columnShippedAddress;
            
            private global::System.Data.DataColumn columnShippedState;
            
            private global::System.Data.DataColumn columnShippedStateCode;
            
            private global::System.Data.DataColumn columnSignature;
            
            private global::System.Data.DataColumn columnSignatureString;
            
            private global::System.Data.DataColumn columnPhoto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsDataTable() {
                this.TableName = "BillingAndShippedDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BillingAndShippedDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BillingAndShippedDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingNameColumn {
                get {
                    return this.columnBillingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingGSTINColumn {
                get {
                    return this.columnBillingGSTIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingAddressColumn {
                get {
                    return this.columnBillingAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingStateColumn {
                get {
                    return this.columnBillingState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingStateCodeColumn {
                get {
                    return this.columnBillingStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippedNameColumn {
                get {
                    return this.columnShippedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippedGSTINColumn {
                get {
                    return this.columnShippedGSTIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippedAddressColumn {
                get {
                    return this.columnShippedAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippedStateColumn {
                get {
                    return this.columnShippedState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippedStateCodeColumn {
                get {
                    return this.columnShippedStateCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignatureColumn {
                get {
                    return this.columnSignature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignatureStringColumn {
                get {
                    return this.columnSignatureString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsRow this[int index] {
                get {
                    return ((BillingAndShippedDetailsRow)(this.Rows[index]));
                }
            }
            
            public event BillingAndShippedDetailsRowChangeEventHandler BillingAndShippedDetailsRowChanging;
            
            public event BillingAndShippedDetailsRowChangeEventHandler BillingAndShippedDetailsRowChanged;
            
            public event BillingAndShippedDetailsRowChangeEventHandler BillingAndShippedDetailsRowDeleting;
            
            public event BillingAndShippedDetailsRowChangeEventHandler BillingAndShippedDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBillingAndShippedDetailsRow(BillingAndShippedDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsRow AddBillingAndShippedDetailsRow(string BillingName, string BillingGSTIN, string BillingAddress, string BillingState, string BillingStateCode, string ShippedName, string ShippedGSTIN, string ShippedAddress, string ShippedState, string ShippedStateCode, string Signature, string SignatureString, string Photo) {
                BillingAndShippedDetailsRow rowBillingAndShippedDetailsRow = ((BillingAndShippedDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BillingName,
                        BillingGSTIN,
                        BillingAddress,
                        BillingState,
                        BillingStateCode,
                        ShippedName,
                        ShippedGSTIN,
                        ShippedAddress,
                        ShippedState,
                        ShippedStateCode,
                        Signature,
                        SignatureString,
                        Photo};
                rowBillingAndShippedDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBillingAndShippedDetailsRow);
                return rowBillingAndShippedDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BillingAndShippedDetailsDataTable cln = ((BillingAndShippedDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BillingAndShippedDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBillingName = base.Columns["BillingName"];
                this.columnBillingGSTIN = base.Columns["BillingGSTIN"];
                this.columnBillingAddress = base.Columns["BillingAddress"];
                this.columnBillingState = base.Columns["BillingState"];
                this.columnBillingStateCode = base.Columns["BillingStateCode"];
                this.columnShippedName = base.Columns["ShippedName"];
                this.columnShippedGSTIN = base.Columns["ShippedGSTIN"];
                this.columnShippedAddress = base.Columns["ShippedAddress"];
                this.columnShippedState = base.Columns["ShippedState"];
                this.columnShippedStateCode = base.Columns["ShippedStateCode"];
                this.columnSignature = base.Columns["Signature"];
                this.columnSignatureString = base.Columns["SignatureString"];
                this.columnPhoto = base.Columns["Photo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBillingName = new global::System.Data.DataColumn("BillingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingName);
                this.columnBillingGSTIN = new global::System.Data.DataColumn("BillingGSTIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingGSTIN);
                this.columnBillingAddress = new global::System.Data.DataColumn("BillingAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingAddress);
                this.columnBillingState = new global::System.Data.DataColumn("BillingState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingState);
                this.columnBillingStateCode = new global::System.Data.DataColumn("BillingStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingStateCode);
                this.columnShippedName = new global::System.Data.DataColumn("ShippedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedName);
                this.columnShippedGSTIN = new global::System.Data.DataColumn("ShippedGSTIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedGSTIN);
                this.columnShippedAddress = new global::System.Data.DataColumn("ShippedAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedAddress);
                this.columnShippedState = new global::System.Data.DataColumn("ShippedState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedState);
                this.columnShippedStateCode = new global::System.Data.DataColumn("ShippedStateCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippedStateCode);
                this.columnSignature = new global::System.Data.DataColumn("Signature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignature);
                this.columnSignatureString = new global::System.Data.DataColumn("SignatureString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSignatureString);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnBillingName.Caption = "DataColumn1";
                this.columnBillingGSTIN.Caption = "DataColumn1";
                this.columnBillingAddress.Caption = "DataColumn1";
                this.columnBillingState.Caption = "DataColumn1";
                this.columnBillingStateCode.Caption = "DataColumn1";
                this.columnShippedName.Caption = "DataColumn1";
                this.columnShippedGSTIN.Caption = "DataColumn1";
                this.columnShippedAddress.Caption = "DataColumn1";
                this.columnSignature.Caption = "DataColumn1";
                this.columnSignatureString.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsRow NewBillingAndShippedDetailsRow() {
                return ((BillingAndShippedDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BillingAndShippedDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BillingAndShippedDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BillingAndShippedDetailsRowChanged != null)) {
                    this.BillingAndShippedDetailsRowChanged(this, new BillingAndShippedDetailsRowChangeEvent(((BillingAndShippedDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BillingAndShippedDetailsRowChanging != null)) {
                    this.BillingAndShippedDetailsRowChanging(this, new BillingAndShippedDetailsRowChangeEvent(((BillingAndShippedDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BillingAndShippedDetailsRowDeleted != null)) {
                    this.BillingAndShippedDetailsRowDeleted(this, new BillingAndShippedDetailsRowChangeEvent(((BillingAndShippedDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BillingAndShippedDetailsRowDeleting != null)) {
                    this.BillingAndShippedDetailsRowDeleting(this, new BillingAndShippedDetailsRowChangeEvent(((BillingAndShippedDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBillingAndShippedDetailsRow(BillingAndShippedDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSChallenInvoice ds = new DSChallenInvoice();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BillingAndShippedDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemDetailsDataTable : global::System.Data.TypedTableBase<ItemDetailsRow> {
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemHSNCode;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUnit;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnDiscountRate;
            
            private global::System.Data.DataColumn columnDiscountAmount;
            
            private global::System.Data.DataColumn columnTaxableValue;
            
            private global::System.Data.DataColumn columnCGSTrate;
            
            private global::System.Data.DataColumn columnCGSTamt;
            
            private global::System.Data.DataColumn columnSGSTrate;
            
            private global::System.Data.DataColumn columnSGSTamt;
            
            private global::System.Data.DataColumn columnIGSTrate;
            
            private global::System.Data.DataColumn columnIGSTamt;
            
            private global::System.Data.DataColumn columnCESSrate;
            
            private global::System.Data.DataColumn columnCESSamt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsDataTable() {
                this.TableName = "ItemDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemHSNCodeColumn {
                get {
                    return this.columnItemHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitColumn {
                get {
                    return this.columnUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountRateColumn {
                get {
                    return this.columnDiscountRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmountColumn {
                get {
                    return this.columnDiscountAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableValueColumn {
                get {
                    return this.columnTaxableValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CGSTrateColumn {
                get {
                    return this.columnCGSTrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CGSTamtColumn {
                get {
                    return this.columnCGSTamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SGSTrateColumn {
                get {
                    return this.columnSGSTrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SGSTamtColumn {
                get {
                    return this.columnSGSTamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IGSTrateColumn {
                get {
                    return this.columnIGSTrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IGSTamtColumn {
                get {
                    return this.columnIGSTamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CESSrateColumn {
                get {
                    return this.columnCESSrate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CESSamtColumn {
                get {
                    return this.columnCESSamt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsRow this[int index] {
                get {
                    return ((ItemDetailsRow)(this.Rows[index]));
                }
            }
            
            public event ItemDetailsRowChangeEventHandler ItemDetailsRowChanging;
            
            public event ItemDetailsRowChangeEventHandler ItemDetailsRowChanged;
            
            public event ItemDetailsRowChangeEventHandler ItemDetailsRowDeleting;
            
            public event ItemDetailsRowChangeEventHandler ItemDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemDetailsRow(ItemDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsRow AddItemDetailsRow(
                        string ItemName, 
                        string ItemHSNCode, 
                        string Qty, 
                        string Unit, 
                        double Rate, 
                        double Amount, 
                        double DiscountRate, 
                        double DiscountAmount, 
                        double TaxableValue, 
                        double CGSTrate, 
                        double CGSTamt, 
                        double SGSTrate, 
                        double SGSTamt, 
                        double IGSTrate, 
                        double IGSTamt, 
                        double CESSrate, 
                        double CESSamt) {
                ItemDetailsRow rowItemDetailsRow = ((ItemDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemName,
                        ItemHSNCode,
                        Qty,
                        Unit,
                        Rate,
                        Amount,
                        DiscountRate,
                        DiscountAmount,
                        TaxableValue,
                        CGSTrate,
                        CGSTamt,
                        SGSTrate,
                        SGSTamt,
                        IGSTrate,
                        IGSTamt,
                        CESSrate,
                        CESSamt};
                rowItemDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemDetailsRow);
                return rowItemDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemDetailsDataTable cln = ((ItemDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemHSNCode = base.Columns["ItemHSNCode"];
                this.columnQty = base.Columns["Qty"];
                this.columnUnit = base.Columns["Unit"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnDiscountRate = base.Columns["DiscountRate"];
                this.columnDiscountAmount = base.Columns["DiscountAmount"];
                this.columnTaxableValue = base.Columns["TaxableValue"];
                this.columnCGSTrate = base.Columns["CGSTrate"];
                this.columnCGSTamt = base.Columns["CGSTamt"];
                this.columnSGSTrate = base.Columns["SGSTrate"];
                this.columnSGSTamt = base.Columns["SGSTamt"];
                this.columnIGSTrate = base.Columns["IGSTrate"];
                this.columnIGSTamt = base.Columns["IGSTamt"];
                this.columnCESSrate = base.Columns["CESSrate"];
                this.columnCESSamt = base.Columns["CESSamt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemHSNCode = new global::System.Data.DataColumn("ItemHSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemHSNCode);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUnit = new global::System.Data.DataColumn("Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnDiscountRate = new global::System.Data.DataColumn("DiscountRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountRate);
                this.columnDiscountAmount = new global::System.Data.DataColumn("DiscountAmount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmount);
                this.columnTaxableValue = new global::System.Data.DataColumn("TaxableValue", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableValue);
                this.columnCGSTrate = new global::System.Data.DataColumn("CGSTrate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGSTrate);
                this.columnCGSTamt = new global::System.Data.DataColumn("CGSTamt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCGSTamt);
                this.columnSGSTrate = new global::System.Data.DataColumn("SGSTrate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGSTrate);
                this.columnSGSTamt = new global::System.Data.DataColumn("SGSTamt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSGSTamt);
                this.columnIGSTrate = new global::System.Data.DataColumn("IGSTrate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGSTrate);
                this.columnIGSTamt = new global::System.Data.DataColumn("IGSTamt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIGSTamt);
                this.columnCESSrate = new global::System.Data.DataColumn("CESSrate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCESSrate);
                this.columnCESSamt = new global::System.Data.DataColumn("CESSamt", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCESSamt);
                this.columnItemHSNCode.Caption = "DataColumn1";
                this.columnQty.Caption = "DataColumn1";
                this.columnUnit.Caption = "DataColumn1";
                this.columnRate.Caption = "DataColumn1";
                this.columnAmount.Caption = "DataColumn1";
                this.columnDiscountRate.Caption = "DataColumn1";
                this.columnDiscountAmount.Caption = "DataColumn1";
                this.columnTaxableValue.Caption = "DataColumn1";
                this.columnCGSTrate.Caption = "DataColumn1";
                this.columnCGSTamt.Caption = "DataColumn1";
                this.columnSGSTrate.Caption = "DataColumn1";
                this.columnSGSTamt.Caption = "DataColumn1";
                this.columnIGSTrate.Caption = "DataColumn1";
                this.columnIGSTamt.Caption = "DataColumn1";
                this.columnCESSrate.Caption = "DataColumn1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsRow NewItemDetailsRow() {
                return ((ItemDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemDetailsRowChanged != null)) {
                    this.ItemDetailsRowChanged(this, new ItemDetailsRowChangeEvent(((ItemDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemDetailsRowChanging != null)) {
                    this.ItemDetailsRowChanging(this, new ItemDetailsRowChangeEvent(((ItemDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemDetailsRowDeleted != null)) {
                    this.ItemDetailsRowDeleted(this, new ItemDetailsRowChangeEvent(((ItemDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemDetailsRowDeleting != null)) {
                    this.ItemDetailsRowDeleting(this, new ItemDetailsRowChangeEvent(((ItemDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemDetailsRow(ItemDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSChallenInvoice ds = new DSChallenInvoice();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrganizationDetailsRow : global::System.Data.DataRow {
            
            private OrganizationDetailsDataTable tableOrganizationDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrganizationDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrganizationDetails = ((OrganizationDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxInvoiceSubject {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.TaxInvoiceSubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxInvoiceSubject\' in table \'OrganizationDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.TaxInvoiceSubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GSTIN {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.GSTINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSTIN\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.GSTINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.InvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceNo\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateofInvoice {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.DateofInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateofInvoice\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.DateofInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AllTotalAmount {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.AllTotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllTotalAmount\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.AllTotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalCGST {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.TotalCGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCGST\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.TotalCGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalSGST {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.TotalSGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSGST\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.TotalSGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalIGST {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.TotalIGSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalIGST\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.TotalIGSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalCESS {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.TotalCESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCESS\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.TotalCESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerNotes {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.CustomerNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerNotes\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.CustomerNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Signature {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signature\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SignatureString {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.SignatureStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignatureString\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.SignatureStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Photo {
                get {
                    try {
                        return ((string)(this[this.tableOrganizationDetails.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Photo\' in table \'OrganizationDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrganizationDetails.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxInvoiceSubjectNull() {
                return this.IsNull(this.tableOrganizationDetails.TaxInvoiceSubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxInvoiceSubjectNull() {
                this[this.tableOrganizationDetails.TaxInvoiceSubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGSTINNull() {
                return this.IsNull(this.tableOrganizationDetails.GSTINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGSTINNull() {
                this[this.tableOrganizationDetails.GSTINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableOrganizationDetails.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableOrganizationDetails.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableOrganizationDetails.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableOrganizationDetails.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableOrganizationDetails.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableOrganizationDetails.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvoiceNoNull() {
                return this.IsNull(this.tableOrganizationDetails.InvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvoiceNoNull() {
                this[this.tableOrganizationDetails.InvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateofInvoiceNull() {
                return this.IsNull(this.tableOrganizationDetails.DateofInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateofInvoiceNull() {
                this[this.tableOrganizationDetails.DateofInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllTotalAmountNull() {
                return this.IsNull(this.tableOrganizationDetails.AllTotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllTotalAmountNull() {
                this[this.tableOrganizationDetails.AllTotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCGSTNull() {
                return this.IsNull(this.tableOrganizationDetails.TotalCGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCGSTNull() {
                this[this.tableOrganizationDetails.TotalCGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSGSTNull() {
                return this.IsNull(this.tableOrganizationDetails.TotalSGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSGSTNull() {
                this[this.tableOrganizationDetails.TotalSGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalIGSTNull() {
                return this.IsNull(this.tableOrganizationDetails.TotalIGSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalIGSTNull() {
                this[this.tableOrganizationDetails.TotalIGSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCESSNull() {
                return this.IsNull(this.tableOrganizationDetails.TotalCESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCESSNull() {
                this[this.tableOrganizationDetails.TotalCESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNotesNull() {
                return this.IsNull(this.tableOrganizationDetails.CustomerNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNotesNull() {
                this[this.tableOrganizationDetails.CustomerNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignatureNull() {
                return this.IsNull(this.tableOrganizationDetails.SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignatureNull() {
                this[this.tableOrganizationDetails.SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignatureStringNull() {
                return this.IsNull(this.tableOrganizationDetails.SignatureStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignatureStringNull() {
                this[this.tableOrganizationDetails.SignatureStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableOrganizationDetails.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoNull() {
                this[this.tableOrganizationDetails.PhotoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BillingAndShippedDetailsRow : global::System.Data.DataRow {
            
            private BillingAndShippedDetailsDataTable tableBillingAndShippedDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BillingAndShippedDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBillingAndShippedDetails = ((BillingAndShippedDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingName {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.BillingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingName\' in table \'BillingAndShippedDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.BillingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingGSTIN {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.BillingGSTINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingGSTIN\' in table \'BillingAndShippedDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.BillingGSTINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingAddress {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.BillingAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingAddress\' in table \'BillingAndShippedDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.BillingAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingState {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.BillingStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingState\' in table \'BillingAndShippedDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.BillingStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BillingStateCode {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.BillingStateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingStateCode\' in table \'BillingAndShippedDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.BillingStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippedName {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.ShippedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippedName\' in table \'BillingAndShippedDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.ShippedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippedGSTIN {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.ShippedGSTINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippedGSTIN\' in table \'BillingAndShippedDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.ShippedGSTINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippedAddress {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.ShippedAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippedAddress\' in table \'BillingAndShippedDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.ShippedAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippedState {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.ShippedStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippedState\' in table \'BillingAndShippedDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.ShippedStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippedStateCode {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.ShippedStateCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippedStateCode\' in table \'BillingAndShippedDetails\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.ShippedStateCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Signature {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.SignatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Signature\' in table \'BillingAndShippedDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.SignatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SignatureString {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.SignatureStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SignatureString\' in table \'BillingAndShippedDetails\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.SignatureStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Photo {
                get {
                    try {
                        return ((string)(this[this.tableBillingAndShippedDetails.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Photo\' in table \'BillingAndShippedDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBillingAndShippedDetails.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingNameNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.BillingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingNameNull() {
                this[this.tableBillingAndShippedDetails.BillingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingGSTINNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.BillingGSTINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingGSTINNull() {
                this[this.tableBillingAndShippedDetails.BillingGSTINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingAddressNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.BillingAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingAddressNull() {
                this[this.tableBillingAndShippedDetails.BillingAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingStateNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.BillingStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingStateNull() {
                this[this.tableBillingAndShippedDetails.BillingStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingStateCodeNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.BillingStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingStateCodeNull() {
                this[this.tableBillingAndShippedDetails.BillingStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippedNameNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.ShippedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippedNameNull() {
                this[this.tableBillingAndShippedDetails.ShippedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippedGSTINNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.ShippedGSTINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippedGSTINNull() {
                this[this.tableBillingAndShippedDetails.ShippedGSTINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippedAddressNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.ShippedAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippedAddressNull() {
                this[this.tableBillingAndShippedDetails.ShippedAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippedStateNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.ShippedStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippedStateNull() {
                this[this.tableBillingAndShippedDetails.ShippedStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippedStateCodeNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.ShippedStateCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippedStateCodeNull() {
                this[this.tableBillingAndShippedDetails.ShippedStateCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignatureNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.SignatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignatureNull() {
                this[this.tableBillingAndShippedDetails.SignatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignatureStringNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.SignatureStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignatureStringNull() {
                this[this.tableBillingAndShippedDetails.SignatureStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableBillingAndShippedDetails.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhotoNull() {
                this[this.tableBillingAndShippedDetails.PhotoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemDetailsRow : global::System.Data.DataRow {
            
            private ItemDetailsDataTable tableItemDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemDetails = ((ItemDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemDetails.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemHSNCode {
                get {
                    try {
                        return ((string)(this[this.tableItemDetails.ItemHSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemHSNCode\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.ItemHSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableItemDetails.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Unit {
                get {
                    try {
                        return ((string)(this[this.tableItemDetails.UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Rate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Amount {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DiscountRate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.DiscountRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountRate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.DiscountRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double DiscountAmount {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.DiscountAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmount\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.DiscountAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TaxableValue {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.TaxableValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableValue\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.TaxableValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CGSTrate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.CGSTrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGSTrate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.CGSTrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CGSTamt {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.CGSTamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CGSTamt\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.CGSTamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SGSTrate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.SGSTrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGSTrate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.SGSTrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SGSTamt {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.SGSTamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SGSTamt\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.SGSTamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IGSTrate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.IGSTrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGSTrate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.IGSTrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double IGSTamt {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.IGSTamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IGSTamt\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.IGSTamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CESSrate {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.CESSrateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CESSrate\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.CESSrateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CESSamt {
                get {
                    try {
                        return ((double)(this[this.tableItemDetails.CESSamtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CESSamt\' in table \'ItemDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemDetails.CESSamtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemDetails.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemDetails.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemHSNCodeNull() {
                return this.IsNull(this.tableItemDetails.ItemHSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemHSNCodeNull() {
                this[this.tableItemDetails.ItemHSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableItemDetails.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableItemDetails.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitNull() {
                return this.IsNull(this.tableItemDetails.UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitNull() {
                this[this.tableItemDetails.UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableItemDetails.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableItemDetails.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableItemDetails.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableItemDetails.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountRateNull() {
                return this.IsNull(this.tableItemDetails.DiscountRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountRateNull() {
                this[this.tableItemDetails.DiscountRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmountNull() {
                return this.IsNull(this.tableItemDetails.DiscountAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmountNull() {
                this[this.tableItemDetails.DiscountAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableValueNull() {
                return this.IsNull(this.tableItemDetails.TaxableValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableValueNull() {
                this[this.tableItemDetails.TaxableValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCGSTrateNull() {
                return this.IsNull(this.tableItemDetails.CGSTrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCGSTrateNull() {
                this[this.tableItemDetails.CGSTrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCGSTamtNull() {
                return this.IsNull(this.tableItemDetails.CGSTamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCGSTamtNull() {
                this[this.tableItemDetails.CGSTamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSGSTrateNull() {
                return this.IsNull(this.tableItemDetails.SGSTrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSGSTrateNull() {
                this[this.tableItemDetails.SGSTrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSGSTamtNull() {
                return this.IsNull(this.tableItemDetails.SGSTamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSGSTamtNull() {
                this[this.tableItemDetails.SGSTamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIGSTrateNull() {
                return this.IsNull(this.tableItemDetails.IGSTrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIGSTrateNull() {
                this[this.tableItemDetails.IGSTrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIGSTamtNull() {
                return this.IsNull(this.tableItemDetails.IGSTamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIGSTamtNull() {
                this[this.tableItemDetails.IGSTamtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCESSrateNull() {
                return this.IsNull(this.tableItemDetails.CESSrateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCESSrateNull() {
                this[this.tableItemDetails.CESSrateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCESSamtNull() {
                return this.IsNull(this.tableItemDetails.CESSamtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCESSamtNull() {
                this[this.tableItemDetails.CESSamtColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrganizationDetailsRowChangeEvent : global::System.EventArgs {
            
            private OrganizationDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsRowChangeEvent(OrganizationDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrganizationDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BillingAndShippedDetailsRowChangeEvent : global::System.EventArgs {
            
            private BillingAndShippedDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsRowChangeEvent(BillingAndShippedDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BillingAndShippedDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemDetailsRowChangeEvent : global::System.EventArgs {
            
            private ItemDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsRowChangeEvent(ItemDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591